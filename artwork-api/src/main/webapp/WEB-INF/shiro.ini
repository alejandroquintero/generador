[main]
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
authc.loginUrl = /#/login
restFilter = co.edu.uniandes.csw.auth.filter.RestFilter
jwt = co.edu.uniandes.csw.auth.filter.JWTFilter
# cors = co.edu.uniandes.csw.auth.filter.CORSFilter

#Integrate with Stormpath:
stormpathClient = com.stormpath.shiro.client.ClientFactory
stormpathClient.cacheManager = $cacheManager
apiKeyProps = co.edu.uniandes.csw.auth.stormpath.ApiKeyProperties
stormpathClient.apiKeyProperties = $apiKeyProps
stormpathRealm = com.stormpath.shiro.realm.ApplicationRealm
stormpathRealm.client = $stormpathClient

# Find this URL in your Stormpath console for an application you create:
# Applications -> (choose application name) --> Details: REST URL

# ------------ WARNING ------------
# Set Stormpath's application URL. Without this application won't run.
stormpathRealm.applicationRestUrl = https://api.stormpath.com/v1/applications/7Aq0vnw9Ss4r7L1E0nasoo

stormpathRealm.authenticationCachingEnabled = true
securityManager.realm = $stormpathRealm

#Roles
stormpathRealm.groupRoleResolver.modeNames = name
securityManager.realm = $stormpathRealm

# Adding Authentication Listeners
# authListener = co.edu.uniandes.csw.bookbasico.shiro.AuthenticationEventListener
# securityManager.authenticator.authenticationListeners = $authListener

# PERMISOS:
# Según la aplicación se deben establecer los permisos necesarios por cada recurso.
# Ejemplo:

# /api/users/login = noSessionCreation, anon
# /api/users/logout = noSessionCreation, jwt
# /api/users/me = noSessionCreation, jwt[permissive]
# /api/artists/** = noSessionCreation, jwt, restFilter[artist]
# /api/clients/** = noSessionCreation, jwt, restFilter[client]
# /api/whishlist/** = noSessionCreation, jwt, restFilter[item]
# /api/products/** = noSessionCreation, jwt, restFilter[product]
# /api/artworks/** = noSessionCreation, jwt, restFilter[artwork]
# /api/categorys/** = noSessionCreation, jwt, restFilter[category]

[urls]
/api/users/login = noSessionCreation, anon
/api/users/logout = noSessionCreation, jwt
/api/users/me = noSessionCreation, jwt[permissive]
/api/artists/** = noSessionCreation, anon
/api/clients/** = noSessionCreation, anon
/api/whishlist/** = noSessionCreation, anon
/api/products/** = noSessionCreation, anon
/api/artworks/** = noSessionCreation, anon
/api/categorys/** = noSessionCreation, anon
/** = noSessionCreation
